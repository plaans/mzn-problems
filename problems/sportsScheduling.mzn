%
% Sports Scheduling in Minizinc
%
% This model was inspired by the ESSENCE' model in the Minion Translator examples:
%
% http://www.cs.st-andrews.ac.uk/~andrea/examples/sportsScheduling/sportsScheduling.eprime
% 

% 
% Model created by Hakan Kjellerstrand, hakank@bonetmail.com
% See also my MiniZinc page: http://www.hakank.org/minizinc
% 

%
% Note: It assumes that there are a channeling matrix between game and
%       schedule (allowed configurations) for symmetry breaking.
%       This matrix should be generated automatically.  

include "globals.mzn";

int:  n; % number of players

set of int: teams = 1..n;
int: num_games = n*(n-1) div 2;
set of int: games = 1..num_games;
set of int: weeks = 1..n-1;

set of int: periods = 1..n div 2;
 
set of int: homeaway = 1..2;

array[weeks, periods, homeaway] of var teams: schedule;
array[weeks, periods] of var games: game;

% for the channeling between schedule and game
%
% TODO: this matrix is quite easy and should be generated automatically.
%
array[1..num_games, 1..3] of int: allowed;

predicate cp1d(array[int] of var int: x, array[int] of var int: y) =
  assert(index_set(x) = index_set(y),
           "cp1d: x and y have different sizes",
     forall(i in index_set(x)) ( x[i] = y[i] ))
; 

solve :: int_search(
                  [schedule[w,p,h] | w in weeks, p in periods, h in homeaway] ++
                  [game[w,p] | w in weeks, p in periods]
                 ,
                  first_fail, % "occurrence",
                  indomain_max,
                  complete 
                 )  
                 satisfy;

constraint
   % All teams play once a week
   forall(w in weeks) (
      all_different([schedule[w,p,h] | p in periods, h in homeaway])
   )
   /\
   
   % Every team plays at most twice in the same period
   forall(p in periods) (
      % at_most(2, [schedule[w,p,h] | w in weeks, h in homeaway] , p)
      count(t in [schedule[w,p,h] | w in weeks, h in homeaway])(t=p) <= 2
   )
   /\
   % Distinct games via alldiff on game array
   all_different([game[w,p] | w in weeks, p in periods] )    % This should translate soon
   /\

   % Channelling between schedule and game
   % (assumes home/away symmetry broken)
   forall(w in weeks, p in periods) (
      exists(a in 1..num_games) (
         cp1d([schedule[w,p,1], schedule[w,p,2], game[w,p]], [allowed[a, i] | i in 1..3])
      )
   )
;


output 
[ "\nschedule: "] ++
[ 
  if p = 1 then "\n" else "" endif ++
  "w:" ++ show(w) ++ " p:" ++ show(p) ++ " : " ++ show(schedule[w, p, 1]) ++ " vs " ++ show(schedule[w, p, 2]) ++  " game:" ++ show(game[w,p]) ++ "\n"
  | w in weeks, p in periods
];

%
% data
%

% 
% The channeling matrix allowed should really be generated online, but until I figure out how
% to do that, here's a Perl one-liner to create the matrix. Change the value of $n.
%
% perl -e '$c=1;$n=4;print "n=$n;allowed=array2d(1..num_games,1..3,[ \n";for $i (1..$n) { for $j (1..$n) { print "$i,$j,$c,    " and $c++ if $i < $j } }; print "\n]);\n"'


% n=2;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,
% ]);

% n=3;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    2,3,3,
% ]);


% For 4 teams (6 matches)
n = 4;
% channeling game <-> schedule. 
allowed = array2d(1..num_games, 1..3,
[
1, 2, 1,
1, 3, 2,
1, 4, 3,
2, 3, 4,
2, 4, 5,
3, 4, 6,
]);

% n=5;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    1,4,3,    1,5,4,    2,3,5,    2,4,6,    2,5,7,    3,4,8,    3,5,9,    4,5,10,
% ]);

% n=6;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    1,4,3,    1,5,4,    1,6,5,    2,3,6,    2,4,7,    2,5,8,    2,6,9,    3,4,10,    3,5,11,    3,6,12,    4,5,13,    4,6,14,    5,6,15,
% ]);

% n=7;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    1,4,3,    1,5,4,    1,6,5,    1,7,6,    2,3,7,    2,4,8,    2,5,9,    2,6,10,    2,7,11,    3,4,12,    3,5,13,    3,6,14,    3,7,15,    4,5,16,    4,6,17,    4,7,18,    5,6,19,    5,7,20,    6,7,21,
% ]);


% % For 8 teams
% n = 8;
% % channeling game <-> schedule. For 8 teams (28 matches)
% allowed = array2d(1..num_games, 1..3, 
% [
% 1,2,1,
% 1,3,2,
% 1,4,3,
% 1,5,4,
% 1,6,5,
% 1,7,6,
% 1,8,7,
% 2,3,8,
% 2,4,9,
% 2,5,10,
% 2,6,11,
% 2,7,12,
% 2,8,13,
% 3,4,14,
% 3,5,15,
% 3,6,16,
% 3,7,17,
% 3,8,18,
% 4,5,19,
% 4,6,20,
% 4,7,21,
% 4,8,22,
% 5,6,23,
% 5,7,24,
% 5,8,25,
% 6,7,26,
% 6,8,27,
% 7,8,28]);

% n=9;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    1,4,3,    1,5,4,    1,6,5,    1,7,6,    1,8,7,    1,9,8,    2,3,9,    2,4,10,    2,5,11,    2,6,12,    2,7,13,    2,8,14,    2,9,15,    3,4,16,    3,5,17,    3,6,18,    3,7,19,    3,8,20,    3,9,21,    4,5,22,    4,6,23,    4,7,24,    4,8,25,    4,9,26,    5,6,27,    5,7,28,    5,8,29,    5,9,30,    6,7,31,    6,8,32,    6,9,33,    7,8,34,    7,9,35,    8,9,36,
% ]);

% n=10;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    1,4,3,    1,5,4,    1,6,5,    1,7,6,    1,8,7,    1,9,8,    1,10,9,    2,3,10,    2,4,11,    2,5,12,    2,6,13,    2,7,14,    2,8,15,    2,9,16,    2,10,17,    3,4,18,    3,5,19,    3,6,20,    3,7,21,    3,8,22,    3,9,23,    3,10,24,    4,5,25,    4,6,26,    4,7,27,    4,8,28,    4,9,29,    4,10,30,    5,6,31,    5,7,32,    5,8,33,    5,9,34,    5,10,35,    6,7,36,    6,8,37,    6,9,38,    6,10,39,    7,8,40,    7,9,41,    7,10,42,    8,9,43,    8,10,44,    9,10,45,
% ]);

% n=11;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    1,4,3,    1,5,4,    1,6,5,    1,7,6,    1,8,7,    1,9,8,    1,10,9,    1,11,10,    2,3,11,    2,4,12,    2,5,13,    2,6,14,    2,7,15,    2,8,16,    2,9,17,    2,10,18,    2,11,19,    3,4,20,    3,5,21,    3,6,22,    3,7,23,    3,8,24,    3,9,25,    3,10,26,    3,11,27,    4,5,28,    4,6,29,    4,7,30,    4,8,31,    4,9,32,    4,10,33,    4,11,34,    5,6,35,    5,7,36,    5,8,37,    5,9,38,    5,10,39,    5,11,40,    6,7,41,    6,8,42,    6,9,43,    6,10,44,    6,11,45,    7,8,46,    7,9,47,    7,10,48,    7,11,49,    8,9,50,    8,10,51,    8,11,52,    9,10,53,    9,11,54,    10,11,55,
% ]);

% n=12;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    1,4,3,    1,5,4,    1,6,5,    1,7,6,    1,8,7,    1,9,8,    1,10,9,    1,11,10,    1,12,11,    2,3,12,    2,4,13,    2,5,14,    2,6,15,    2,7,16,    2,8,17,    2,9,18,    2,10,19,    2,11,20,    2,12,21,    3,4,22,    3,5,23,    3,6,24,    3,7,25,    3,8,26,    3,9,27,    3,10,28,    3,11,29,    3,12,30,    4,5,31,    4,6,32,    4,7,33,    4,8,34,    4,9,35,    4,10,36,    4,11,37,    4,12,38,    5,6,39,    5,7,40,    5,8,41,    5,9,42,    5,10,43,    5,11,44,    5,12,45,    6,7,46,    6,8,47,    6,9,48,    6,10,49,    6,11,50,    6,12,51,    7,8,52,    7,9,53,    7,10,54,    7,11,55,    7,12,56,    8,9,57,    8,10,58,    8,11,59,    8,12,60,    9,10,61,    9,11,62,    9,12,63,    10,11,64,    10,12,65,    11,12,66,
% ]);


% n=13;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    1,4,3,    1,5,4,    1,6,5,    1,7,6,    1,8,7,    1,9,8,    1,10,9,    1,11,10,    1,12,11,    1,13,12,    2,3,13,    2,4,14,    2,5,15,    2,6,16,    2,7,17,    2,8,18,    2,9,19,    2,10,20,    2,11,21,    2,12,22,    2,13,23,    3,4,24,    3,5,25,    3,6,26,    3,7,27,    3,8,28,    3,9,29,    3,10,30,    3,11,31,    3,12,32,    3,13,33,    4,5,34,    4,6,35,    4,7,36,    4,8,37,    4,9,38,    4,10,39,    4,11,40,    4,12,41,    4,13,42,    5,6,43,    5,7,44,    5,8,45,    5,9,46,    5,10,47,    5,11,48,    5,12,49,    5,13,50,    6,7,51,    6,8,52,    6,9,53,    6,10,54,    6,11,55,    6,12,56,    6,13,57,    7,8,58,    7,9,59,    7,10,60,    7,11,61,    7,12,62,    7,13,63,    8,9,64,    8,10,65,    8,11,66,    8,12,67,    8,13,68,    9,10,69,    9,11,70,    9,12,71,    9,13,72,    10,11,73,    10,12,74,    10,13,75,    11,12,76,    11,13,77,    12,13,78,
% ]);


% n=14;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    1,4,3,    1,5,4,    1,6,5,    1,7,6,    1,8,7,    1,9,8,    1,10,9,    1,11,10,    1,12,11,    1,13,12,    1,14,13,    2,3,14,    2,4,15,    2,5,16,    2,6,17,    2,7,18,    2,8,19,    2,9,20,    2,10,21,    2,11,22,    2,12,23,    2,13,24,    2,14,25,    3,4,26,    3,5,27,    3,6,28,    3,7,29,    3,8,30,    3,9,31,    3,10,32,    3,11,33,    3,12,34,    3,13,35,    3,14,36,    4,5,37,    4,6,38,    4,7,39,    4,8,40,    4,9,41,    4,10,42,    4,11,43,    4,12,44,    4,13,45,    4,14,46,    5,6,47,    5,7,48,    5,8,49,    5,9,50,    5,10,51,    5,11,52,    5,12,53,    5,13,54,    5,14,55,    6,7,56,    6,8,57,    6,9,58,    6,10,59,    6,11,60,    6,12,61,    6,13,62,    6,14,63,    7,8,64,    7,9,65,    7,10,66,    7,11,67,    7,12,68,    7,13,69,    7,14,70,    8,9,71,    8,10,72,    8,11,73,    8,12,74,    8,13,75,    8,14,76,    9,10,77,    9,11,78,    9,12,79,    9,13,80,    9,14,81,    10,11,82,    10,12,83,    10,13,84,    10,14,85,    11,12,86,    11,13,87,    11,14,88,    12,13,89,    12,14,90,    13,14,91,
% ]);


% n=15;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    1,4,3,    1,5,4,    1,6,5,    1,7,6,    1,8,7,    1,9,8,    1,10,9,    1,11,10,    1,12,11,    1,13,12,    1,14,13,    1,15,14,    2,3,15,    2,4,16,    2,5,17,    2,6,18,    2,7,19,    2,8,20,    2,9,21,    2,10,22,    2,11,23,    2,12,24,    2,13,25,    2,14,26,    2,15,27,    3,4,28,    3,5,29,    3,6,30,    3,7,31,    3,8,32,    3,9,33,    3,10,34,    3,11,35,    3,12,36,    3,13,37,    3,14,38,    3,15,39,    4,5,40,    4,6,41,    4,7,42,    4,8,43,    4,9,44,    4,10,45,    4,11,46,    4,12,47,    4,13,48,    4,14,49,    4,15,50,    5,6,51,    5,7,52,    5,8,53,    5,9,54,    5,10,55,    5,11,56,    5,12,57,    5,13,58,    5,14,59,    5,15,60,    6,7,61,    6,8,62,    6,9,63,    6,10,64,    6,11,65,    6,12,66,    6,13,67,    6,14,68,    6,15,69,    7,8,70,    7,9,71,    7,10,72,    7,11,73,    7,12,74,    7,13,75,    7,14,76,    7,15,77,    8,9,78,    8,10,79,    8,11,80,    8,12,81,    8,13,82,    8,14,83,    8,15,84,    9,10,85,    9,11,86,    9,12,87,    9,13,88,    9,14,89,    9,15,90,    10,11,91,    10,12,92,    10,13,93,    10,14,94,    10,15,95,    11,12,96,    11,13,97,    11,14,98,    11,15,99,    12,13,100,    12,14,101,    12,15,102,    13,14,103,    13,15,104,    14,15,105,
% ]);


% n=16;
% allowed=array2d(1..num_games,1..3,[
% 1,2,1,    1,3,2,    1,4,3,    1,5,4,    1,6,5,    1,7,6,    1,8,7,    1,9,8,    1,10,9,    1,11,10,    1,12,11,    1,13,12,    1,14,13,    1,15,14,    1,16,15,    2,3,16,    2,4,17,    2,5,18,    2,6,19,    2,7,20,    2,8,21,    2,9,22,    2,10,23,    2,11,24,    2,12,25,    2,13,26,    2,14,27,    2,15,28,    2,16,29,    3,4,30,    3,5,31,    3,6,32,    3,7,33,    3,8,34,    3,9,35,    3,10,36,    3,11,37,    3,12,38,    3,13,39,    3,14,40,    3,15,41,    3,16,42,    4,5,43,    4,6,44,    4,7,45,    4,8,46,    4,9,47,    4,10,48,    4,11,49,    4,12,50,    4,13,51,    4,14,52,    4,15,53,    4,16,54,    5,6,55,    5,7,56,    5,8,57,    5,9,58,    5,10,59,    5,11,60,    5,12,61,    5,13,62,    5,14,63,    5,15,64,    5,16,65,    6,7,66,    6,8,67,    6,9,68,    6,10,69,    6,11,70,    6,12,71,    6,13,72,    6,14,73,    6,15,74,    6,16,75,    7,8,76,    7,9,77,    7,10,78,    7,11,79,    7,12,80,    7,13,81,    7,14,82,    7,15,83,    7,16,84,    8,9,85,    8,10,86,    8,11,87,    8,12,88,    8,13,89,    8,14,90,    8,15,91,    8,16,92,    9,10,93,    9,11,94,    9,12,95,    9,13,96,    9,14,97,    9,15,98,    9,16,99,    10,11,100,    10,12,101,    10,13,102,    10,14,103,    10,15,104,    10,16,105,    11,12,106,    11,13,107,    11,14,108,    11,15,109,    11,16,110,    12,13,111,    12,14,112,    12,15,113,    12,16,114,    13,14,115,    13,15,116,    13,16,117,    14,15,118,    14,16,119,    15,16,120,
% ]);
